{-
    Contract Name: Staking Pool Contract (Reward-Based)
    Purpose: A staking pool smart contract that enables participants
             to contribute a fixed stake and distributes rewards 
             to selected winners upon pool closure.
    Author: Vsevolod V. Melyukov
    Created On: 01/01/2025
    Version: 0.0.1
-}

#include "./imports/stdlib.fc";

int slices_equal?(slice a, slice b) asm "SDEQ";
int floor (int x, int y) asm "DIV";
int round (int x, int y) asm "DIVR";
int pow (int x) asm "POW2";
int my_tons() asm "BALANCE" "FIRST";
(int) math::mod (int x, int y) asm "MOD";

() send_message_back(slice address, int ans_tag, int query_id, int body, int extra, int grams, int mode) impure {
    ;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool src:MsgAddress -> 011000
    var msg = begin_cell()
        .store_uint(0x18, 6)
        .store_slice(address)
        .store_grams(grams)
        .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
        .store_uint(ans_tag, 32)
        .store_uint(query_id, 64);
    
    if (body >= 0 ) {
        msg~store_uint(body, 32);
    }
    if (extra >= 0) {
        msg~store_uint(extra, 32);
    }
    send_raw_message(msg.end_cell(), mode);
    return ();
}

tuple pool_tuple(int pool_id, int start_time, int end_time, int max_participants, int current_participant_count, int pool_status, int stake_amount, cell participants, cell results, cell rewards) 
    asm(pool_id start_time end_time max_participants current_participant_count pool_status stake_amount participants results rewards) "10 TUPLE";

tuple participant_tuple(int entry_wc, slice entry_addr, int stake_amount) asm(entry_wc entry_addr stake_amount) "3 TUPLE";

(int) math::pow(int n, int e) {
    if (e == 0) {
        return 1;
    }

    if (e == 1) {
        return n;
    }

    int p = math::pow(n, (e / 2));
    p = p * p;
    
    if ((e % 2) == 1) {
        p = p * n;
    }
    
    return p;
}